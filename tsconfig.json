{
  "compilerOptions": {
    "paths": {
      "@/*": ["*"]
    },
    "target": "ESNext",
    "module": "CommonJS",
    "outDir": "./dist",
    "rootDir": "./src",
    "baseUrl": "./src",
    "typeRoots": ["./node_modules/@types", "./src/types"],
    "strict": true,
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "skipDefaultLibCheck": true,
    "skipLibCheck": true,
    "removeComments": true,
    "sourceMap": true,
    "noImplicitAny": true,
    "moduleResolution": "node",
    "resolveJsonModule": true, // This is the important part for the import statement to work correctly in Node.js with JSON files
    "alwaysStrict": true,
    "noUnusedLocals": true,
    "declaration": true,
    "noFallthroughCasesInSwitch": true, // Enforce a check for fallthrough cases in switch statements
    "noImplicitOverride": true, // Ensure overriding members in derived classes are marked with an override modifier
    // Ensure that Babel can safely transpile files in the TypeScript project
    "isolatedModules": true
  },
  "include": ["src/**/*.ts", "babel.config.js", "eslint.config.js"],
  "exclude": ["node_modules", "dist"]
}
